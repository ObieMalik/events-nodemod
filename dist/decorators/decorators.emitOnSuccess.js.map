{"version":3,"file":"decorators.emitOnSuccess.js","sourceRoot":"","sources":["../../src/decorators/decorators.emitOnSuccess.ts"],"names":[],"mappings":";;AAAA,4BAA2B;AAE3B,oDAA+C;AAE/C,0BAAuB;AAEvB,uBAA+B,KAAa,EAAE,cAAuB,KAAK;IACtE,OAAO,UAAW,MAAW,EAAE,WAAmB;QAC9C,IAAI,gBAAgB,GAAG,MAAM,CAAE,WAAW,CAAE,CAAA;QAE5C,OAAO,MAAM,CAAE,WAAW,CAAE,GAAG,UAAW,GAAG,IAAW;YACpD,OAAO,CAAC,GAAG,CAAE,uBAAuB,CAAE,CAAA;YAEtC,IAAI,OAAO,GAAG,gBAAgB,CAAC,KAAK,CAAE,IAAI,EAAE,IAAI,CAAE,CAAA;YAClD,OAAO;iBACF,IAAI,CAAE,CAAE,QAAa,EAAG,EAAE;gBACvB,IAAI,OAAO,GAAG,QAAQ,CAAA;gBACtB,OAAO,CAAC,GAAG,CAAE,yCAAyC,CAAE,CAAA;gBAExD,IAAK,WAAW,EAAG;oBAAE,OAAO,GAAG,CAAC,CAAC,MAAM,CAAE,QAAQ,EAAE,IAAI,CAAE,CAAA;iBAAE;gBAC3D,IAAI;oBACA,IAAI,MAAM,GAAG,4BAAY,CAAC,QAAQ,CAAC,IAAI,CAAE,KAAK,EAAE,OAAO,CAAE,CAAA;oBACzD,IAAK,CAAC,MAAM,IAAI,MAAM,KAAK,SAAS,EAAG;wBACnC,MAAM,IAAI,SAAS,CAAE,8BAA8B,CAAE,CAAA;qBACxD;iBACJ;gBAAC,OAAQ,GAAG,EAAG;oBACZ,OAAO,CAAC,GAAG,CAAE,gBAAgB,EAAE,GAAG,CAAE,CAAA;iBACvC;YACL,CAAC,CAAE,CAAA;YACP,OAAO,OAAO,CAAA;QAClB,CAAC,CAAA;IACL,CAAC,CAAA;AACL,CAAC;AA1BD,sCA0BC","sourcesContent":["import * as _ from 'lodash'\n\nimport { EventEmitter } from '../event.emitter'\n\nimport '@bazook/errors'\n\nexport function EmitOnSuccess( event: string, includeArgs: boolean = false ): any {\n    return function ( target: any, propertyKey: string ): any {\n        let originalFunction = target[ propertyKey ]\n\n        return target[ propertyKey ] = function ( ...args: any[] ) {\n            console.log( 'Executing Function...' )\n\n            let promise = originalFunction.apply( this, args )\n            promise\n                .then( ( response: any ) => {\n                    let message = response\n                    console.log( 'Execution Complete. Emitting Message...' )\n\n                    if ( includeArgs ) { message = _.extend( response, args ) }\n                    try {\n                        let status = EventEmitter.instance.emit( event, message )\n                        if ( !status || status === undefined ) {\n                            throw new NullError( 'Null Response. Unknown Error' )\n                        }\n                    } catch ( err ) {\n                        console.log( 'Emit Failure: ', err )\n                    }\n                } )\n            return promise\n        }\n    }\n}"]}